---
import t from '@util/language.json';
import { Lang } from '@util/language.astro';
import { SITE, Frontmatter } from '../config';
import { sortByPubDateDesc } from '@util/PageTypeFilters';
import { formatDate } from '@util/DateFormat.astro';
import { addSlashToAddress } from '@util/Url.astro';
import Default from '@layouts/Default.astro';

// Properties
type Props = {
    frontmatter: Frontmatter
};
const { frontmatter } = Astro.props as Props;
const lang = frontmatter.lang ?? SITE.default.lang;

// Language
const _ = Lang(lang);

// Logic
const allPages = await Astro.glob('/**/*.md');
const authorPages = allPages
    .filter(p => p.frontmatter.authors?.indexOf(frontmatter.id) > -1)
    .sort(sortByPubDateDesc)
    .slice(0, 5);
---
<Default frontmatter={frontmatter}>
    <slot />
    <h2>{ _(t.author.recent_articles) }</h2>
    <ul class="post-list">
    {authorPages.map((post) => (
    <li class="list-item" data-destination={ addSlashToAddress(post.url) }>
        <article>
        <img src={ post.frontmatter.bannerImage.src } alt={ post.frontmatter.bannerImage.alt } loading="lazy" />
        <div class="list-item-content">
        <span class="post-meta">{ formatDate(post.frontmatter, lang, SITE) }</span>
        <h2>
            <a href={ addSlashToAddress(post.url) }>{ post.frontmatter.title }</a>
        </h2>
        </div>
        </article>
    </li>
    ))}
    </ul>
</Default>