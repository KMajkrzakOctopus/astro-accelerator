---
import t from '../Language/language.json';
import { Language } from '../Language/language';
import type { NavPage } from './NavPage.astro';

type Props = {
  lang: string;
  navPage: NavPage
};
const { lang, navPage } = Astro.props as Props;

const language = new Language(lang);
const _ = (entry: { [key: string]: string }) => language.translate(entry);
---
{(navPage.children.length == 0) && (
<li>
  <a href={ navPage.url } aria-current={ navPage.ariaCurrent }>{ navPage.title }</a>
</li>
)}
{(navPage.children.length > 0) && (
<li class="has-children">
  <details class="sub-nav" open={ navPage.isOpen }>
    <summary><span>{ navPage.section }</span></summary>
    <ul>
      <li>
        <a href={ navPage.url } aria-current={ navPage.ariaCurrent }>{ navPage.title }</a>
      </li>
      { navPage.children.sort((a, b) => a.order - b.order).map((page) => (
          <Astro.self lang={lang} navPage={page} />
      ))}
    </ul>
  </details>
</li>
)}